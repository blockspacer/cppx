
#ifndef def_token
#  define def_token(K)
#endif

#ifndef def_puncop
#  define def_puncop(K, S) def_token(K)
#endif

def_token(unknown)
def_token(space)
def_token(newline)
def_token(block_comment)
def_token(line_comment)
def_token(par_comment)
def_token(indent)
def_token(dedent)
def_token(separator)

def_puncop(left_paren, "(")
def_puncop(right_paren, ")")
def_puncop(left_bracket, "[")
def_puncop(right_bracket, "]")
def_puncop(left_brace, "{")
def_puncop(right_brace, "}")
def_puncop(single_quote, "'")
def_puncop(double_quote, "\"")
def_puncop(question, "?")
def_puncop(hash, "#")
def_puncop(plus, "+")
def_puncop(minus, "-")
def_puncop(star, "*")
def_puncop(slash, "/")
def_puncop(percent, "%")
def_puncop(ampersand, "&")
def_puncop(bar, "|")
def_puncop(caret, "^")
def_puncop(tilde, "~")
def_puncop(bang, "!")
def_puncop(less, "<")
def_puncop(greater, ">")
def_puncop(equal, "=")
def_puncop(dot, ".")
def_puncop(colon, ":")
def_puncop(semicolon, ";")
def_puncop(comma, ",")
def_puncop(at, "@")

def_puncop(equal_equal, "==")
def_puncop(bang_equal, "!=")
def_puncop(less_equal, "<=")
def_puncop(greater_equal, ">=")
def_puncop(less_greater, "<>")
def_puncop(ampersand_ampersand, "&&")
def_puncop(bar_bar, "||")
def_puncop(colon_equal, ":=")
def_puncop(plus_equal, "+=")
def_puncop(minus_equal, "-=")
def_puncop(star_equal, "*=")
def_puncop(slash_equal, "/=")
def_puncop(percent_equal, "%=")
def_puncop(minus_greater, "->")
def_puncop(equal_greater, "=>")
def_puncop(dot_dot, "..")

def_puncop(ellipsis, "...")

def_token(identifier)
def_token(binary_integer)
def_token(decimal_integer)
def_token(hexadecimal_integer)
def_token(decimal_float)
def_token(hexadecimal_float)
def_token(character)
def_token(string)

#undef def_puncop
#undef def_token
