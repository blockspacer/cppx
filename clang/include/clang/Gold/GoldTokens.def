
#ifndef def_token
#  define def_token(K)
#endif

#ifndef def_puncop
#  define def_puncop(K, S) def_token(K)
#endif

#ifndef def_keyword
#  define def_keyword(K, S) def_token(K)
#endif

def_token(EndOfFile)
def_token(Invalid)
def_token(Unknown)
def_token(Space)
def_token(Newline)
def_token(BlockComment)
def_token(LineComment)
def_token(ParComment)
def_token(Indent)
def_token(Dedent)
def_token(Separator)

def_puncop(LeftParen, "(")
def_puncop(RightParen, ")")
def_puncop(LeftBracket, "[")
def_puncop(RightBracket, "]")
def_puncop(LeftBrace, "{")
def_puncop(RightBrace, "}")
def_puncop(SingleQuote, "'")
def_puncop(DoubleQuote, "\"")
def_puncop(Question, "?")
def_puncop(Hash, "#")
def_puncop(Plus, "+")
def_puncop(Minus, "-")
def_puncop(Star, "*")
def_puncop(Slash, "/")
def_puncop(Percent, "%")
def_puncop(Ampersand, "&")
def_puncop(Bar, "|")
def_puncop(Caret, "^")
def_puncop(Tilde, "~")
def_puncop(Bang, "!")
def_puncop(Less, "<")
def_puncop(Greater, ">")
def_puncop(Equal, "=")
def_puncop(Dot, ".")
def_puncop(Colon, ":")
def_puncop(Semicolon, ";")
def_puncop(Comma, ",")
def_puncop(At, "@")

def_puncop(EqualEqual, "==")
def_puncop(BangEqual, "!=")
def_puncop(LessEqual, "<=")
def_puncop(GreaterEqual, ">=")
def_puncop(LessGreater, "<>")
def_puncop(AmpersandAmpersand, "&&")
def_puncop(BarBar, "||")
def_puncop(ColonEqual, ":=")
def_puncop(PlusEqual, "+=")
def_puncop(MinusEqual, "-=")
def_puncop(StarEqual, "*=")
def_puncop(SlashEqual, "/=")
def_puncop(PercentEqual, "%=")
def_puncop(MinusGreater, "->")
def_puncop(EqualGreater, "=>")
def_puncop(DotDot, "..")

def_puncop(Ellipsis, "...")

def_keyword(Void, "void")
def_keyword(Bool, "bool")
def_keyword(Char, "char")
def_keyword(Wchar_t, "wchar_t")
def_keyword(Wint_t, "wint_t")
def_keyword(Char8_t, "char8_t")
def_keyword(Char16_t, "char16_t")
def_keyword(Char32_t, "char32_t")
def_keyword(SignedChar, "signed char")
def_keyword(Short, "short")
// def_keyword(Short, "short int")
def_keyword(Int, "int")
def_keyword(Long, "long")
// def_keyword(Long, "long int")
def_keyword(LongLong, "long long")
// def_keyword(LongLong, "long long int")
def_keyword(Int128_t, "int128_t")
def_keyword(UnsignedChar, "unsigned char")
def_keyword(UnsignedShort, "unsigned short")
// def_keyword(UnsignedShort, "unsigned short int")
def_keyword(Unsigned, "unsigned")
// def_keyword(Unsigned, "unsigned int")
def_keyword(UnsignedLong, "unsigned long")
// def_keyword(UnsignedLong, "unsigned long int")
def_keyword(UnsignedLongLong, "unsigned long long")
// def_keyword(UnsignedLongLong, "unsigned long long int")
def_keyword(Uint128_t, "uint128_t")
def_keyword(Float, "float")
def_keyword(Double, "double")
def_keyword(LongDouble, "long double")
def_keyword(Float128_t, "float128_t")
def_keyword(Type, "type")
def_keyword(Class, "class")
def_keyword(Args, "args")
def_keyword(Namespace, "namespace")
def_keyword(True, "true")
def_keyword(False, "false")

def_token(Identifier)
def_token(BinaryInteger)
def_token(DecimalInteger)
def_token(HexadecimalInteger)
def_token(DecimalFloat)
def_token(HexadecimalFloat)
def_token(Character)
def_token(HexadecimalCharacter)
def_token(String)

#undef def_keyword
#undef def_puncop
#undef def_token